@model dynamic

@{
    ViewData["Title"] = "Product Details";

    string name = Model is Master_pice.Models.PC pc ? pc.Brand + " " + pc.Processor :
                  Model is Master_pice.Models.Laptop laptop ? laptop.Brand + " " + laptop.Model :
                  Model is Master_pice.Models.PCPart part ? part.Model : "Unknown Product";

    string image = Model.ImageURL ?? "no-image.png";

    string description = Model is Master_pice.Models.PC pcDesc ? pcDesc.Description :
                         Model is Master_pice.Models.Laptop lapDesc ? lapDesc.Description :
                         Model is Master_pice.Models.PCPart partDesc ? partDesc.Compatibility :
                         "No description available";

    decimal price = Model.Price;

    string type = Model is Master_pice.Models.PC ? "pc" :
              Model is Master_pice.Models.Laptop ? "laptop" :
              Model is Master_pice.Models.PCPart ? "pcpart" : "unknown";


    int productId = Model is Master_pice.Models.PC pcId ? pcId.PCID :
                    Model is Master_pice.Models.Laptop lapId ? lapId.LaptopID :
                    Model is Master_pice.Models.PCPart partId ? partId.PartID : 0;

    // Split AdditionalImageURLs by comma and check if there are any additional images
    // var additionalImages = Model.AdditionalImageURLs?.Split(',') ?? new string[] { };

}
@{
    var additionalImages = (Model.AdditionalImageURLs ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries);
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
    .dropdown-menu {
        background-color: white;
        color: black;
        border-radius: 5px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-top: 10px;
    }


    .dropdown-item {
        color: #007bff;
        cursor: pointer;


    }



    .small-Card img {
        width: 198px;
        height: 148px;
        border-radius: 4px;
        cursor: pointer;


    }


    .small-card {
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .small-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.2);
        }

    .star-rating {
        direction: rtl;
        font-size: 2rem;
    }

        .star-rating input[type="radio"] {
            display: none;
        }

        .star-rating label {
            color: #ccc;
            font-size: 2rem;
            padding: 0 5px;
            cursor: pointer;
        }

        .star-rating input[type="radio"]:checked ~ label {
            color: #ffc107;
        }

        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: #ffc107;
        }


</style>

@section StylesProductDet {
    <link rel="stylesheet" href="~/css/productDet.css" />
    <link rel="stylesheet" href="~/css/det.css" />
}

<section class="product-container">
    <div class="img-card">
        @* <img src="~/uploads/@image" alt="@name" id="featured-image"> *@
        
        <div class="main-image-container text-center mb-4">
            <img id="mainImage"
                 src="~/uploads/@image"
                 alt="Main Product Image"
                 class="img-fluid rounded shadow"
                 style="max-width: 500px; max-height: 400px; object-fit: cover; transition: 0.4s;" />
        </div>

        <div class="d-flex flex-wrap justify-content-center gap-3">
            @if (additionalImages.Length > 0)
            {
                foreach (var img in additionalImages)
                {
                    var cleanImg = img.Trim();
                    <div class="small-card p-2 bg-white rounded shadow-sm"
                         style="width: 210px; height: 160px; overflow: hidden; transition: transform 0.3s;">
                        <img src="~/uploads/@cleanImg"
                             alt="Additional Image"
                             onclick="changeMainImage(this)"
                             class="img-fluid w-100 h-100"
                             style="object-fit: cover; border-radius: 8px; cursor: pointer;" />
                    </div>
                }
            }
            else
            {
                @for (int i = 0; i < 4; i++)
                {
                    <div class="small-card p-2 bg-white rounded shadow-sm"
                         style="width: 210px; height: 160px; overflow: hidden; transition: transform 0.3s;">
                        <img src="@image"
                             alt="Main Image"
                             onclick="changeMainImage(this)"
                             class="img-fluid w-100 h-100"
                             style="object-fit: cover; border-radius: 8px; cursor: pointer;" />
                    </div>
                }
            }
        </div>



    </div>

    <!-- Right side -->
    <div class="product-info">
        <div class="product-details">
            <div class="product-card">
                <h2 class="product-title">@name</h2>
                <ul class="product-details">
                    <li>@description</li>
                    @if (Model is Master_pice.Models.PC pcModel)
                    {
                        <li><b>Processor:</b> @pcModel.Processor</li>
                        <li><b>Graphics:</b> @pcModel.GPU</li>
                        <li><b>Storage:</b> @pcModel.Storage</li>
                        <li><b>RAM:</b> @pcModel.RAM</li>
                    }
                    else if (Model is Master_pice.Models.Laptop laptopModel)
                    {
                        <li><b>Processor:</b> @laptopModel.Processor</li>
                        <li><b>RAM:</b> @laptopModel.RAM</li>
                        <li><b>Storage:</b> @laptopModel.Storage</li>
                        <li><b>GPU:</b> @laptopModel.GPU</li>
                    }
                    else if (Model is Master_pice.Models.PCPart partModel)
                    {
                        <li><b>Category:</b> @partModel.Category</li>
                        <li><b>Specs:</b> @partModel.Model</li>
                        <li><b>Price:</b> $@partModel.Price</li>
                    }
                </ul>

                <p class="price">On Sale from <span>$@price</span></p>

                <div class="d-flex flex-column align-items-center gap-3 mt-4">

                    <form method="post" asp-action="AddToCart" asp-controller="Product" class="w-100">
                        <input type="hidden" name="ProductId" value="@productId" />
                        <input type="hidden" name="Type" value="@type" />
                        <div class="d-flex flex-column align-items-center gap-2">

                            <div class="d-flex align-items-center gap-2">
                                <label for="quantity" class="form-label mb-0 fw-bold">Quantity:</label>
                                <input type="number" name="Quantity" class="form-control form-control-sm" style="width: 80px;" value="1" min="1" />
                            </div>

                            <div class="d-flex justify-content-center gap-3 w-100">
                                <button type="submit" class="btn btn-success w-50">
                                    <i class="fas fa-cart-plus"></i> Add to Cart
                                </button>

                                <button type="button" class="btn btn-warning w-50" onclick="location.href='@Url.Action("CheckOut", "Product", new { productId = productId, type = type })'">
                                    <i class="fas fa-credit-card"></i> Buy Now
                                </button>
                            </div>

                        </div>
                    </form>

                    @* <form method="post" asp-controller="Favorite" asp-action="AddToFavorites" class="w-100">  *@
                    @*     <input type="hidden" name="productId" value="@productId" />  *@
                    @*      <input type="hidden" name="type" value="@type" />  *@
                    @*    <button type="submit" class="btn btn-outline-danger w-100">  *@
                    @*        <i class="fas fa-heart"></i> Add to Favorites  *@
                    @*     </button>  *@
                    @* </form> *@

                </div>


            </div>
        </div>
    </div>
</section>
<hr />
<br />
<br />


<center>
<div class="mt-5">
    <h4 class="mb-4">Customer Reviews </h4>

    @if (ViewBag.Reviews != null && ViewBag.Reviews.Count > 0)
    {
        foreach (var review in ViewBag.Reviews)
        {
            <div class="card mb-3 shadow-sm">
                <div class="card-body d-flex">
                    <img src="~/uploads/@(review.UserImage ?? "default-user.png")"
                         alt="User" class="rounded-circle" style="width: 60px; height: 60px; object-fit: cover; margin-right: 15px;" />

                    <div>
                        <h6 class="mb-1">@review.UserName</h6>

                        <div>
                            @for (int i = 0; i < review.Stars; i++)
                            {
                                <i class="fas fa-star text-warning"></i>
                            }
                            @for (int i = review.Stars; i < 5; i++)
                            {
                                <i class="far fa-star text-warning"></i>
                            }
                        </div>

                        <small class="text-muted">@review.CreatedAt.ToString("dd MMM yyyy")</small>

                        <p class="mt-2">@review.Comment</p>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-muted">No reviews yet. Be the first to review this product!</p>
    }
</div>

</center>


<hr />
<center>
<section class="container mt-5">

    <div class="mt-5">
        <h4 class="mb-3">Leave a Review ⭐</h4>

        <form method="post" asp-action="SubmitReview" asp-controller="Product">
            <input type="hidden" name="ProductId" value="@productId" />
            <input type="hidden" name="type" value="@type" />

            <div class="star-rating mb-3">
                <input type="radio" id="5-stars" name="Stars" value="5" required /><label for="5-stars" class="star">&#9733;</label>
                <input type="radio" id="4-stars" name="Stars" value="4" /><label for="4-stars" class="star">&#9733;</label>
                <input type="radio" id="3-stars" name="Stars" value="3" /><label for="3-stars" class="star">&#9733;</label>
                <input type="radio" id="2-stars" name="Stars" value="2" /><label for="2-stars" class="star">&#9733;</label>
                <input type="radio" id="1-star" name="Stars" value="1" /><label for="1-star" class="star">&#9733;</label>
            </div>


            <div class="mb-3">
                <label for="Comment" class="form-label">Comment:</label>
                <textarea class="form-control" name="Comment" rows="3" placeholder="Share your experience..." required></textarea>
            </div>

            <button type="submit" class="btn btn-danger">Submit Review</button>
        </form>
    </div>

</section>
</center>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
<br />
<br />



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
    @if (TempData["SuccessMessage"] != null)
    {
        <text>
                    Swal.fire({
                        icon: 'success',
                        title: '✔️ Success',
                        text: '@TempData["SuccessMessage"]',
                        background: 'linear-gradient(135deg, #e0ffe0, #ffffff)',
                        color: '#2e2e2e',
                        backdrop: `
                            rgba(0, 255, 0, 0.1)
                            center
                            no-repeat
                        `,
                        timer: 2500,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        customClass: {
                            popup: 'rounded-4 shadow-lg',
                            title: 'fw-bold fs-3 text-success',
                            content: 'text-dark'
                        },
                        showClass: {
                            popup: 'animate__animated animate__fadeInDown'
                        },
                        hideClass: {
                            popup: 'animate__animated animate__fadeOutUp'
                        }
                    });
        </text>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <text>
                    Swal.fire({
                        icon: 'error',
                        title: '❌ Error',
                        text: '@TempData["ErrorMessage"]',
                        background: 'linear-gradient(135deg, #ffe0e0, #ffffff)',
                        color: '#2e2e2e',
                        backdrop: `
                            rgba(255, 0, 0, 0.1)
                            center
                            no-repeat
                        `,
                        timer: 3000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        customClass: {
                            popup: 'rounded-4 shadow-lg',
                            title: 'fw-bold fs-3 text-danger',
                            content: 'text-dark'
                        },
                        showClass: {
                            popup: 'animate__animated animate__fadeInDown'
                        },
                        hideClass: {
                            popup: 'animate__animated animate__fadeOutUp'
                        }
                    });
        </text>
    }
    });
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<script>
    function changeMainImage(clickedImage) {
        var mainImage = document.getElementById("mainImage");

        mainImage.style.opacity = 0;
        setTimeout(function () {
            mainImage.src = clickedImage.src;
            mainImage.style.opacity = 1;
        }, 200);
    }
</script>