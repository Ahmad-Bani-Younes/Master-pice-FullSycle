@model Master_pice.ViewModel.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
    var cart = ViewBag.Cart as List<dynamic> ?? new List<dynamic>();
    decimal total = ViewBag.Total ?? 0;
    var shipping = ViewBag.Shipping ?? 0;

}

<style>
    .dropdown-menu {
        background-color: white;
        color: black;
        border-radius: 5px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin-top: 10px;
    }


    .dropdown-item {
        color: #007bff;
        cursor: pointer;
    }
</style>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous">
<div class="container mt-5">
    <div class="row">
        <!-- CART -->
        <div class="col-md-4 order-2">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Your Cart</span>
                <span class="badge rounded-pill bg-secondary">@cart.Count</span>
            </h4>

            <div class="card p-3 shadow-sm border-0 rounded-3">
                @foreach (var item in cart)
                {
                    dynamic product = item.Product;
                    string name = product.Brand + " " + (product.Model ?? product.Processor);
                    decimal price = product.Price;
                    int quantity = item.Quantity;
                    decimal totalItemPrice = price * quantity;

                    <div class="d-flex align-items-center border-bottom py-3">
                        <img src="~/uploads/@product.ImageURL" alt="Product Image"
                             style="width: 60px; height: 60px; object-fit: cover; border-radius: 10px;" />

                        <div class="ms-3 flex-grow-1">
                            <div class="fw-semibold">@name</div>
                            <small class="text-muted">Qty: @quantity × $@price.ToString("0.00")</small>
                        </div>

                        <div class="fw-bold text-end" style="min-width: 70px;">
                            $@totalItemPrice.ToString("0.00")
                        </div>
                    </div>
                }

                <div class="d-flex justify-content-between pt-3 mt-2 border-top">
                    <span class="text-muted">Shipping</span>
                    <span class="fw-bold text-success">$@shipping.ToString("0.00")</span>
                </div>

                <div class="d-flex justify-content-between pt-2">
                    <span class="text-muted">Total</span>
                    <span class="fw-bold text-dark">$@total.ToString("0.00")</span>
                </div>
            </div>
        </div>


        <!-- CHECKOUT FORM -->
        <div class="col-md-8 order-1">
            <h4 class="mb-3">Billing Address</h4>
            <form asp-action="PlaceOrder" asp-controller="Product" method="post" enctype="multipart/form-data" onsubmit="return validateCheckoutForm()">
                <!-- بيانات الفاتورة -->
                <div class="row">
                    <div class="col mb-4">
                        <label for="FullName">Full Name</label>
                        <input asp-for="FullName" class="form-control" required />
                    </div>
                    <div class="col mb-4">
                        <label for="Phone">Phone</label>
                        <input asp-for="Phone" class="form-control" required />
                    </div>
                </div>

                <div class="mb-4">
                    <label for="Email">Email</label>
                    <input asp-for="Email" type="email" class="form-control" required />
                </div>

                <div class="mb-4">
                    <label for="Address">Address</label>
                    <input asp-for="Region" class="form-control" required />
                </div>
               


                <!-- طريقة الدفع -->
                <h5 class="mt-4">Payment Method</h5>
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="PaymentMethod" value="Cash" onchange="togglePaymentFields()" />
                    <label class="form-check-label">Cash</label>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="PaymentMethod" value="CreditCard" checked onchange="togglePaymentFields()" />
                    <label class="form-check-label">Credit Card</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="PaymentMethod" value="OrangeMoney" onchange="togglePaymentFields()" />
                    <label class="form-check-label">Orange Money</label>
                </div>

                <!-- بطاقة ائتمان -->
                <div id="creditFields" class="mt-3">
                    <div class="mb-3">
                        <label>Name on Card</label>
                        <input asp-for="CardName" class="form-control" id="cardName" />
                    </div>
                    <div class="mb-3">
                        <label>Card Number</label>
                        <input asp-for="CardNumber" class="form-control" id="cardNumber" />
                    </div>
                    <div class="row">
                        <div class="col mb-3">
                            <label>Expiry Date</label>
                            <input asp-for="Expiry" class="form-control" type="month" id="expiry" />
                        </div>
                        <div class="col mb-3">
                            <label>CVV</label>
                            <input asp-for="CVV" class="form-control" id="cvv" />
                        </div>
                    </div>
                </div>

                <!-- أورنج موني -->
                <div id="orangeFields" class="mt-3" style="display:none;">
                    <div class="mb-3">
                        <label>Your Orange Money Number</label>
                        <input type="text" class="form-control" value="0777031805" readonly />
                    </div>
                    <div class="mb-3">
                        <label>Upload Payment Receipt</label>
                        <input type="file" name="OrangeReceipt" accept="image/*" class="form-control" />
                    </div>
                </div>

                <hr class="mb-4">
                <div class="d-grid">
                    <button class="btn btn-primary btn-lg" type="button" onclick="confirmCheckout()">Checkout</button>
                </div>
            </form>

        </div>
    </div>
</div>
<br />
<br />
@section Scripts {
    <script>
        function togglePaymentFields() {
            const method = document.querySelector('input[name="PaymentMethod"]:checked').value;
            document.getElementById("creditFields").style.display = method === "CreditCard" ? "block" : "none";
            document.getElementById("orangeFields").style.display = method === "OrangeMoney" ? "block" : "none";
        }

        document.addEventListener("DOMContentLoaded", togglePaymentFields);

        function validateCheckoutForm() {
            const method = document.querySelector('input[name="PaymentMethod"]:checked').value;

            if (method === "CreditCard") {
                const cardName = document.getElementById("cardName").value.trim();
                const cardNumber = document.getElementById("cardNumber").value.trim();
                const expiry = document.getElementById("expiry").value.trim();
                const cvv = document.getElementById("cvv").value.trim();

                if (!cardName || !cardNumber || !expiry || !cvv) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Missing Information',
                        text: 'Please fill in all credit card details.',
                        background: '#fff',
                        color: '#2e2e2e'
                    });
                    return false;
                }

                if (!/^\d{16}$/.test(cardNumber)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Card Number',
                        text: 'Card number must be 16 digits.',
                        background: '#fff',
                        color: '#2e2e2e'
                    });
                    return false;
                }

                if (!/^\d{3,4}$/.test(cvv)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid CVV',
                        text: 'CVV must be 3 or 4 digits.',
                        background: '#fff',
                        color: '#2e2e2e'
                    });
                    return false;
                }

                const currentDate = new Date();
                const selectedDate = new Date(expiry + "-01");
                if (selectedDate < currentDate) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Expired Card',
                        text: 'Expiry date must be in the future.',
                        background: '#fff',
                        color: '#2e2e2e'
                    });
                    return false;
                }
            }

            if (method === "OrangeMoney") {
                const receiptInput = document.querySelector('input[name="OrangeReceipt"]');
                if (!receiptInput.files.length) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Receipt Required',
                        text: 'Please upload the payment receipt.',
                        background: '#fff',
                        color: '#2e2e2e'
                    });
                    return false;
                }
            }

            return true;
        }
    </script>






}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<!-- إضافة مكتبة أنميشن -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

<script>
    document.addEventListener("DOMContentLoaded", function () {
    @if (TempData["SuccessMessage"] != null)
    {
        <text>
                    Swal.fire({
                        icon: 'success',
                        title: '✔️ Success',
                        text: '@TempData["SuccessMessage"]',
                        background: 'linear-gradient(135deg, #e0ffe0, #ffffff)',
                        color: '#2e2e2e',
                        backdrop: `
                            rgba(0,255,0,0.1)
                            center
                            no-repeat
                        `,
                        timer: 2500,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        customClass: {
                            popup: 'rounded-4 shadow-lg',
                            title: 'fw-bold fs-3 text-success',
                            content: 'text-dark'
                        },
                        showClass: {
                            popup: 'animate__animated animate__fadeInDown'
                        },
                        hideClass: {
                            popup: 'animate__animated animate__fadeOutUp'
                        }
                    });
        </text>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <text>
                    Swal.fire({
                        icon: 'error',
                        title: '❌ Error',
                        text: '@TempData["ErrorMessage"]',
                        background: 'linear-gradient(135deg, #ffe0e0, #ffffff)',
                        color: '#2e2e2e',
                        backdrop: `
                            rgba(255,0,0,0.1)
                            center
                            no-repeat
                        `,
                        timer: 3000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        customClass: {
                            popup: 'rounded-4 shadow-lg',
                            title: 'fw-bold fs-3 text-danger',
                            content: 'text-dark'
                        },
                        showClass: {
                            popup: 'animate__animated animate__fadeInDown'
                        },
                        hideClass: {
                            popup: 'animate__animated animate__fadeOutUp'
                        }
                    });
        </text>
    }
    });
</script>

<script>
    function confirmCheckout() {
        Swal.fire({
            title: 'Confirm Order',
            text: 'Are you sure you want to place this order?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Place Order!'
        }).then((result) => {
            if (result.isConfirmed) {
                // بعد تأكيده، فحص الفورم
                if (validateCheckoutForm()) {
                    document.querySelector('form').submit(); // إرسال الفورم
                }
            }
        });
    }
</script>
